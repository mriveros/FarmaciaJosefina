/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Ventanas;

import Clases.CustomTextField;
import Procedimientos.Conexion;
import com.keffect.effects.animatedEffects.Shape;
import com.keffectpanel.KEffectPanel;
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Reymundo Tenorio
 */
public class InventarioP extends javax.swing.JFrame {

    /**
     * Creates new form InventarioP
     */
    

    public InventarioP() {
        
         try {
            this.setIconImage(new ImageIcon(getClass().getResource("Icono.png")).getImage());
        } catch (NullPointerException ex) {
        }
         
         
        initComponents();
        btnAgotarse.setVisible(false);
         btnVencer.setVisible(false);
        this.setResizable(false);
//        Tabla.setFont(new java.awt.Font("Tahoma", 0, 18)); 
        Tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        TablaU.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        btnVerDesact.setVisible(false);
        btnDesactivar.setVisible(false);
        txtBuscar.setVisible(false);
        txtBuscar1.setVisible(false);
        
        /*COPIAR PEGAR DESACTIVAR*/
        
//         JTextComponent.KeyBinding[] newBindings = {
////        new JTextComponent.KeyBinding(
////          KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_MASK),
////          DefaultEditorKit.beepAction),
//        new JTextComponent.KeyBinding(
//          KeyStroke.getKeyStroke(KeyEvent.VK_V, InputEvent.CTRL_MASK),
//          DefaultEditorKit.beepAction),
////        new JTextComponent.KeyBinding(
////            KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_MASK),
////            DefaultEditorKit.beepAction)
////      
//         };
//            
//    Keymap k = txtNombre.getKeymap();
//    JTextComponent.loadKeymap(k, newBindings, txtNombre.getActions());
//    
    
        
//        MultipleEffect effects = new MultipleEffect();
//				effects.addEffect(new ShadowFrame(20));
//				effects.addEffect(new Shadow(1000));
//				effects.addEffect(new SplitHorizontalFade(1000));
//				effects.addEffect(new SplitVerticalFade(2000));
//				effects.addEffect(new DarkenReverse(6000,50));
//                                
           // PanelEffect.setEffect(effects);                    
   
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TabbedPane = new org.edisoncor.gui.tabbedPane.TabbedPaneHeader();
        PanelVer = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbbusc = new javax.swing.JComboBox();
        jFechaVence1 = new com.toedter.calendar.JDateChooser();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnVerDesact = new javax.swing.JButton();
        btnDesactivar = new javax.swing.JButton();
        btnAgotarse = new javax.swing.JButton();
        btnVencer = new javax.swing.JButton();
        btnshowall = new javax.swing.JButton();
        btnprint = new javax.swing.JButton();
        btncancel3 = new javax.swing.JButton();
        PanelVerUnid = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbbusc1 = new javax.swing.JComboBox();
        txtBuscar1 = new javax.swing.JTextField();
        jFechaVence = new com.toedter.calendar.JDateChooser();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablaU = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        btnshowall1 = new javax.swing.JButton();
        btnprint1 = new javax.swing.JButton();
        btncancel4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inventario");
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TabbedPane.setColorDeBorde(new java.awt.Color(0, 204, 204));
        TabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TabbedPaneStateChanged(evt);
            }
        });

        PanelVer = PanelEffect;
        PanelVer.setBackground(new java.awt.Color(0, 153, 204));
        PanelVer.setLayout(new javax.swing.BoxLayout(PanelVer, javax.swing.BoxLayout.LINE_AXIS));

        jPanel7.setBackground(new java.awt.Color(0, 153, 204));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel4.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar Por: ");

        cmbbusc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbbusc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fecha Vencimiento", "Producto", "Proveedor", "Laboratorio" }));
        cmbbusc.setToolTipText("Buscar Por:");
        cmbbusc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbbuscItemStateChanged(evt);
            }
        });

        jFechaVence1.setDateFormatString("MM-yyyy");
        jFechaVence1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jFechaVence1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFechaVence1PropertyChange(evt);
            }
        });

        txtBuscar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtBuscar.setToolTipText("Buscar");
        CustomTextField customTextField10 = new CustomTextField(100);
        txtBuscar = customTextField10;
        customTextField10.setPlaceholder("Ingrese Informaci√≥n a Buscar");
        customTextField10.setFont(new java.awt.Font("Tahoma", 0, 16));
        customTextField10.setForeground(Color.BLACK);
        customTextField10.setPlaceholderForeground(Color.LIGHT_GRAY);
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        /*txtBuscar = new AutoComplete.AutoCompletar();
        ((AutoCompletar)txtBuscar).setDesplegable(new DesplegableJPopUPMenu(txtBuscar));
        ModeloAutoCompletar modelo1 = new ModeloVendNames();
        ((AutoCompletar)txtBuscar).setModelo(modelo1);
        ((AutoCompletar)txtBuscar).getDesplegable().setForeground(new Color(102,153,255));
        ((AutoCompletar)txtBuscar).addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscTyped(evt);
            }
        });
        ((AutoCompletar)txtBuscar).setToolTipText("Ingresar Dato a Buscar");*/

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cmbbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 849, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(298, 298, 298)
                    .addComponent(jFechaVence1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(592, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jFechaVence1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jFechaVence1.getDateEditor().getUiComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jdFechaKeyTyped(evt);
            }
        });

        jFechaVence1.getDateEditor().getUiComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdFechaKeyReleased(evt);
            }
        });

        jFechaVence1.getDateEditor().getUiComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdFechaKeyPressed(evt);
            }
        });

        jFechaVence.getDateEditor().getUiComponent().setToolTipText("Seleccione Fecha");

        jPanel7.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Tabla.setToolTipText("Lista Registros");
        Tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Tabla.getTableHeader().setReorderingAllowed(false);
        Tabla.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TablaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TablaFocusLost(evt);
            }
        });
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(Tabla);

        jPanel7.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(0, 102, 153));

        btnVerDesact.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnVerDesact.setForeground(new java.awt.Color(255, 255, 255));
        btnVerDesact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        btnVerDesact.setMnemonic('o');
        btnVerDesact.setText("Ver Desactivados");
        btnVerDesact.setToolTipText("Modificar Registro");
        btnVerDesact.setContentAreaFilled(false);
        btnVerDesact.setEnabled(false);
        btnVerDesact.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVerDesact.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVerDesact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnVerDesactFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnVerDesactFocusLost(evt);
            }
        });
        btnVerDesact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDesactActionPerformed(evt);
            }
        });
        jPanel5.add(btnVerDesact);

        btnDesactivar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDesactivar.setForeground(new java.awt.Color(255, 255, 255));
        btnDesactivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eliminar.png"))); // NOI18N
        btnDesactivar.setMnemonic('D');
        btnDesactivar.setText("Desactivar");
        btnDesactivar.setToolTipText("Desactivar");
        btnDesactivar.setContentAreaFilled(false);
        btnDesactivar.setEnabled(false);
        btnDesactivar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDesactivar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDesactivar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnDesactivarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnDesactivarFocusLost(evt);
            }
        });
        btnDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesactivarActionPerformed(evt);
            }
        });
        jPanel5.add(btnDesactivar);

        btnAgotarse.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAgotarse.setForeground(new java.awt.Color(255, 255, 255));
        btnAgotarse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Alerta.png"))); // NOI18N
        btnAgotarse.setMnemonic('D');
        btnAgotarse.setText("Productos a Agotarse");
        btnAgotarse.setToolTipText("Desactivar");
        btnAgotarse.setContentAreaFilled(false);
        btnAgotarse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgotarse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgotarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgotarseActionPerformed(evt);
            }
        });
        jPanel5.add(btnAgotarse);

        btnVencer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnVencer.setForeground(new java.awt.Color(255, 255, 255));
        btnVencer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Vence.png"))); // NOI18N
        btnVencer.setMnemonic('D');
        btnVencer.setText("Unidades a Vencer");
        btnVencer.setToolTipText("Desactivar");
        btnVencer.setContentAreaFilled(false);
        btnVencer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVencer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVencer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVencerActionPerformed(evt);
            }
        });
        jPanel5.add(btnVencer);

        btnshowall.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnshowall.setForeground(new java.awt.Color(255, 255, 255));
        btnshowall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TablaTodos.png"))); // NOI18N
        btnshowall.setMnemonic('m');
        btnshowall.setText("Mostrar Todos");
        btnshowall.setToolTipText("Mostrar Todos Los Registros");
        btnshowall.setContentAreaFilled(false);
        btnshowall.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnshowall.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnshowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowallActionPerformed(evt);
            }
        });
        jPanel5.add(btnshowall);

        btnprint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnprint.setForeground(new java.awt.Color(255, 255, 255));
        btnprint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Imprimir.png"))); // NOI18N
        btnprint.setMnemonic('i');
        btnprint.setText("Imprimir");
        btnprint.setToolTipText("Imprimir/Mostrar Reporte");
        btnprint.setContentAreaFilled(false);
        btnprint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnprint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });
        jPanel5.add(btnprint);

        btncancel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel3.setForeground(new java.awt.Color(255, 255, 255));
        btncancel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btncancel3.setMnemonic('c');
        btncancel3.setText("Cancelar");
        btncancel3.setToolTipText("Cancelar / Salir");
        btncancel3.setContentAreaFilled(false);
        btncancel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel3ActionPerformed(evt);
            }
        });
        jPanel5.add(btncancel3);

        jPanel7.add(jPanel5, java.awt.BorderLayout.SOUTH);

        PanelVer.add(jPanel7);

        TabbedPane.addTab("Inventario por presentaci√≥n", PanelVer);

        PanelVerUnid = PanelEffect2;
        PanelVerUnid.setBackground(new java.awt.Color(0, 153, 204));
        PanelVerUnid.setLayout(new javax.swing.BoxLayout(PanelVerUnid, javax.swing.BoxLayout.LINE_AXIS));

        jPanel8.setBackground(new java.awt.Color(0, 153, 204));
        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel6.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Buscar Por: ");

        cmbbusc1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbbusc1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fecha Vencimiento", "Producto", "Proveedor", "Laboratorio" }));
        cmbbusc1.setToolTipText("Buscar Por:");
        cmbbusc1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbbusc1ItemStateChanged(evt);
            }
        });

        txtBuscar1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtBuscar1.setToolTipText("Buscar");
        CustomTextField customTextField9 = new CustomTextField(100);
        txtBuscar1 = customTextField9;
        customTextField9.setPlaceholder("Ingrese Informaci√≥n a Buscar");
        customTextField9.setFont(new java.awt.Font("Tahoma", 0, 16));
        customTextField9.setForeground(Color.BLACK);
        customTextField9.setPlaceholderForeground(Color.LIGHT_GRAY);
        txtBuscar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscar1KeyReleased(evt);
            }
        });
        /*txtBuscar = new AutoComplete.AutoCompletar();
        ((AutoCompletar)txtBuscar).setDesplegable(new DesplegableJPopUPMenu(txtBuscar));
        ModeloAutoCompletar modelo1 = new ModeloVendNames();
        ((AutoCompletar)txtBuscar).setModelo(modelo1);
        ((AutoCompletar)txtBuscar).getDesplegable().setForeground(new Color(102,153,255));
        ((AutoCompletar)txtBuscar).addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscTyped(evt);
            }
        });
        ((AutoCompletar)txtBuscar).setToolTipText("Ingresar Dato a Buscar");*/

        jFechaVence.setDateFormatString("MM-yyyy");
        jFechaVence.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jFechaVence.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFechaVencePropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cmbbusc1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscar1, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                    .addContainerGap(299, Short.MAX_VALUE)
                    .addComponent(jFechaVence, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(496, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbbusc1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jFechaVence, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jFechaVence.getDateEditor().getUiComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jdFechaKeyTyped(evt);
            }
        });

        jFechaVence.getDateEditor().getUiComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdFechaKeyReleased(evt);
            }
        });

        jFechaVence.getDateEditor().getUiComponent().addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdFechaKeyPressed(evt);
            }
        });

        jFechaVence.getDateEditor().getUiComponent().setToolTipText("Seleccione Fecha");

        jPanel8.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        TablaU.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaU.setToolTipText("Lista Registros");
        TablaU.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TablaU.getTableHeader().setReorderingAllowed(false);
        TablaU.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TablaUFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TablaUFocusLost(evt);
            }
        });
        TablaU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaUMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaUMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(TablaU);

        jPanel8.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        jPanel9.setBackground(new java.awt.Color(0, 102, 153));

        btnshowall1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnshowall1.setForeground(new java.awt.Color(255, 255, 255));
        btnshowall1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TablaTodos.png"))); // NOI18N
        btnshowall1.setMnemonic('m');
        btnshowall1.setText("Mostrar Todos");
        btnshowall1.setToolTipText("Mostrar Todos Los Registros");
        btnshowall1.setContentAreaFilled(false);
        btnshowall1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnshowall1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnshowall1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowall1ActionPerformed(evt);
            }
        });
        jPanel9.add(btnshowall1);

        btnprint1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnprint1.setForeground(new java.awt.Color(255, 255, 255));
        btnprint1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Imprimir.png"))); // NOI18N
        btnprint1.setMnemonic('i');
        btnprint1.setText("Imprimir");
        btnprint1.setToolTipText("Imprimir/Mostrar Reporte");
        btnprint1.setContentAreaFilled(false);
        btnprint1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnprint1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnprint1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprint1ActionPerformed(evt);
            }
        });
        jPanel9.add(btnprint1);

        btncancel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel4.setForeground(new java.awt.Color(255, 255, 255));
        btncancel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btncancel4.setMnemonic('c');
        btncancel4.setText("Cancelar");
        btncancel4.setToolTipText("Cancelar / Salir");
        btncancel4.setContentAreaFilled(false);
        btncancel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel4ActionPerformed(evt);
            }
        });
        jPanel9.add(btncancel4);

        jPanel8.add(jPanel9, java.awt.BorderLayout.SOUTH);

        PanelVerUnid.add(jPanel8);

        TabbedPane.addTab("Inventario en unidades", PanelVerUnid);

        getContentPane().add(TabbedPane, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1090, 625));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
   // private int ID_Inventario;
    
    private MenuPrincipal MP;

 
    public void setMP(MenuPrincipal MP) {
        this.MP = MP;
    }
    
    
       public void jdFechaKeyTyped(KeyEvent evt) {

        char a = evt.getKeyChar();

        evt.consume();
        Toolkit.getDefaultToolkit().beep();

    }

    public void jdFechaKeyPressed(KeyEvent evt) {
        char a = evt.getKeyChar();

        evt.consume();
        Toolkit.getDefaultToolkit().beep();

    }

    public void jdFechaKeyReleased(KeyEvent evt) {
        char a = evt.getKeyChar();

        evt.consume();
        Toolkit.getDefaultToolkit().beep();

    }

    
    
    public static ResultSet resultado;

   

    public void Titulo(){
        
        Object [] Titulo = { "Fecha Vencimiento", "Producto", "Proveedor", "Laboratorio", "Unids. Disponibles",
            "Precio Venta", "Ingreso Total", "Costo Total", "Utilidad Total", "Estado", "ID_Producto"};
        
       
        model.setColumnIdentifiers(Titulo);
      
        this.Tabla.setModel(model);
        
        JTableHeader header = Tabla.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
   
  

    }
    
      public void TituloUnid(){
        
        Object [] Titulo = {"Fecha Vencimiento", "Producto", "Proveedor", "Laboratorio", "Unids. Disponibles",
            "Precio Venta", "Ingreso Total", "Costo Total", "Utilidad Total", "Estado", "ID_Producto"};
        
       
        modelU.setColumnIdentifiers(Titulo);
      
        this.TablaU.setModel(modelU);
        
        JTableHeader header = TablaU.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
  
    }
   
    
    
   public void ActualizarTabla() throws ParseException{
        
         
       Titulo();
     
       model.setRowCount(0);
       Tabla.setModel(model);
       
      
        try{
            
        
        resultado = Conexion.consulta("Select * from [dbo].[InventarioV] where Unids_Inventario  > 0 and"
                + " Estado_DetCompra = 'Activo'"); //[Estado_DetCompra]


     
       while (resultado.next())
       {     
              Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                     +" x"+resultado.getString(4).trim()+" "+resultado.getString(5).trim()
                     +" "+resultado.getString(6).trim();
              Datos [2]= resultado.getString(7);
              Datos [3]= resultado.getString(8);
              Datos [4]= String.valueOf(resultado.getInt(9));
              Datos [5]= String.valueOf(resultado.getDouble(10));
              Datos [6]= String.valueOf(resultado.getDouble(11));
              Datos [7]= String.valueOf(resultado.getDouble(12));
              Datos [8]= String.valueOf(resultado.getDouble(13));
              Datos [9]= String.valueOf(resultado.getString(14));
              Datos [10]= String.valueOf(resultado.getInt(15));
   
 
              
              model.addRow(Datos);  
   
    }
       
       Tabla.setModel(model);
    
   
//        Tabla.getColumnModel().getColumn( 10 ).setCellEditor( new Celda_CheckBox() );
//        //para pintar la columna con el CheckBox en la tabla, en este caso, la primera columna
//        Tabla.getColumnModel().getColumn( 10 ).setCellRenderer(new Render_CheckBox());      

        
    }   catch (SQLException ex) {
      JOptionPane.showMessageDialog(null,ex.getMessage()); 
    }
        
          
    }
   
   public void Buscar(){
       
       Titulo();
       
        int index = cmbbusc.getSelectedIndex()+1;

        switch(index){

              case 2:

            try{
                model.setRowCount(0);
                String Buscar = txtBuscar.getText();
                resultado = Conexion.consulta("Select * from [dbo].[InventarioV] where Unids_Inventario  > 0 and"
                        + " Estado_DetCompra = 'Activo' and "
                        + "[Nombre_Producto]+' '+[Presentacion]+' x'+CAST([UnidsXCaja] AS varchar)"
                        + "+' '+[Tipo_Medicamento]+' '+[Contenido] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
              Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                     +" x"+resultado.getString(4).trim()+" "+resultado.getString(5).trim()
                     +" "+resultado.getString(6).trim();
              Datos [2]= resultado.getString(7);
              Datos [3]= resultado.getString(8);
              Datos [4]= String.valueOf(resultado.getInt(9));
              Datos [5]= String.valueOf(resultado.getDouble(10));
              Datos [6]= String.valueOf(resultado.getDouble(11));
              Datos [7]= String.valueOf(resultado.getDouble(12));
              Datos [8]= String.valueOf(resultado.getDouble(13));
              Datos [9]= String.valueOf(resultado.getString(14));
              Datos [10]= String.valueOf(resultado.getInt(15));
   
              
              model.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;
               
                   case 3:

            try{
                model.setRowCount(0);
                String Buscar = txtBuscar.getText();
                resultado = Conexion.consulta("Select * from [dbo].[InventarioV] where Unids_Inventario  > 0 and"
                        + " Estado_DetCompra = 'Activo' and "
                        + " [Nombre_Proveedor] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
             Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                     +" x"+resultado.getString(4).trim()+" "+resultado.getString(5).trim()
                     +" "+resultado.getString(6).trim();
              Datos [2]= resultado.getString(7);
              Datos [3]= resultado.getString(8);
              Datos [4]= String.valueOf(resultado.getInt(9));
              Datos [5]= String.valueOf(resultado.getDouble(10));
              Datos [6]= String.valueOf(resultado.getDouble(11));
              Datos [7]= String.valueOf(resultado.getDouble(12));
              Datos [8]= String.valueOf(resultado.getDouble(13));
              Datos [9]= String.valueOf(resultado.getString(14));
              Datos [10]= String.valueOf(resultado.getInt(15));
   
              model.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;
                       
               case 4:

            try{
                model.setRowCount(0);
                String Buscar = txtBuscar.getText();
                resultado = Conexion.consulta("Select * from [dbo].[InventarioV] where Unids_Inventario  > 0 and"
                        + " Estado_DetCompra = 'Activo' and "
                        + "[Laboratorio] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
             Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                     +" x"+resultado.getString(4).trim()+" "+resultado.getString(5).trim()
                     +" "+resultado.getString(6).trim();
              Datos [2]= resultado.getString(7);
              Datos [3]= resultado.getString(8);
              Datos [4]= String.valueOf(resultado.getInt(9));
              Datos [5]= String.valueOf(resultado.getDouble(10));
              Datos [6]= String.valueOf(resultado.getDouble(11));
              Datos [7]= String.valueOf(resultado.getDouble(12));
              Datos [8]= String.valueOf(resultado.getDouble(13));
              Datos [9]= String.valueOf(resultado.getString(14));
              Datos [10]= String.valueOf(resultado.getInt(15));
   
              
              model.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;

            default:

            break;

          
        
        }
        Tabla.setModel(model);
                
   }

   
     public void BuscarU(){
       
       TituloUnid();
       
        int index = cmbbusc1.getSelectedIndex()+1;

        switch(index){

              case 2:

            try{
                modelU.setRowCount(0);
                String Buscar = txtBuscar1.getText();
                resultado = Conexion.consulta("Select * from [dbo].[InventarioUnidsV] where Unids_Inventario  > 0 and"
                        + " Estado_DetCompra = 'Activo' and  "
                        + "[Nombre_Producto]+' '+[Tipo_Medicamento]+' '+[Contenido] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
              Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                         +" "+resultado.getString(4).trim();
              Datos [2]= resultado.getString(5);
              Datos [3]= resultado.getString(6);
              Datos [4]= String.valueOf(resultado.getInt(7));
              Datos [5]= String.valueOf(resultado.getDouble(8));
              Datos [6]= String.valueOf(resultado.getDouble(9));
              Datos [7]= String.valueOf(resultado.getDouble(10));
              Datos [8]= String.valueOf(resultado.getDouble(11));
              Datos [9]= String.valueOf(resultado.getString(12));
              Datos [10]= String.valueOf(resultado.getInt(13));
   
   
              
              modelU.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;
               
                   case 3:

            try{
                modelU.setRowCount(0);
                String Buscar = txtBuscar1.getText();
                resultado = Conexion.consulta("Select * from [dbo].[InventarioUnidsV] where Unids_Inventario  > 0 and"
                        + " Estado_DetCompra = 'Activo' and "
                        + "[Nombre_Proveedor] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
              Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                         +" "+resultado.getString(4).trim();
              Datos [2]= resultado.getString(5);
              Datos [3]= resultado.getString(6);
              Datos [4]= String.valueOf(resultado.getInt(7));
              Datos [5]= String.valueOf(resultado.getDouble(8));
              Datos [6]= String.valueOf(resultado.getDouble(9));
              Datos [7]= String.valueOf(resultado.getDouble(10));
              Datos [8]= String.valueOf(resultado.getDouble(11));
              Datos [9]= String.valueOf(resultado.getString(12));
              Datos [10]= String.valueOf(resultado.getInt(13));
   
   
              modelU.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;
                       
               case 4:

            try{
                modelU.setRowCount(0);
                String Buscar = txtBuscar1.getText();
                resultado = Conexion.consulta("Select * from [dbo].[InventarioUnidsV] where Unids_Inventario  > 0 and"
                        + " Estado_DetCompra = 'Activo' and "
                        + "[Laboratorio] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
              Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                         +" "+resultado.getString(4).trim();
              Datos [2]= resultado.getString(5);
              Datos [3]= resultado.getString(6);
              Datos [4]= String.valueOf(resultado.getInt(7));
              Datos [5]= String.valueOf(resultado.getDouble(8));
              Datos [6]= String.valueOf(resultado.getDouble(9));
              Datos [7]= String.valueOf(resultado.getDouble(10));
              Datos [8]= String.valueOf(resultado.getDouble(11));
              Datos [9]= String.valueOf(resultado.getString(12));
              Datos [10]= String.valueOf(resultado.getInt(13));
   
   
              
              modelU.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;

            default:

            break;

          
        
        }
        TablaU.setModel(modelU);
                
   }

   
     public void ActualizarTablaU() throws ParseException{
        
         
       TituloUnid();
     
       modelU.setRowCount(0);
       TablaU.setModel(modelU);
       
      
        try{
            
        
        resultado = Conexion.consulta("Select * from [dbo].[InventarioUnidsV] where Unids_Inventario  > 0 and"
                + " Estado_DetCompra = 'Activo'");


     
       while (resultado.next())
       {     
              Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                         +" "+resultado.getString(4).trim();
              Datos [2]= resultado.getString(5);
              Datos [3]= resultado.getString(6);
              Datos [4]= String.valueOf(resultado.getInt(7));
              Datos [5]= String.valueOf(resultado.getDouble(8));
              Datos [6]= String.valueOf(resultado.getDouble(9));
              Datos [7]= String.valueOf(resultado.getDouble(10));
              Datos [8]= String.valueOf(resultado.getDouble(11));
              Datos [9]= String.valueOf(resultado.getString(12));
              Datos [10]= String.valueOf(resultado.getInt(13));
   
 
              
              modelU.addRow(Datos);  
   
    }
       
       TablaU.setModel(modelU);
    
   
//        Tabla.getColumnModel().getColumn( 10 ).setCellEditor( new Celda_CheckBox() );
//        //para pintar la columna con el CheckBox en la tabla, en este caso, la primera columna
//        Tabla.getColumnModel().getColumn( 10 ).setCellRenderer(new Render_CheckBox());      

        
    }   catch (SQLException ex) {
      JOptionPane.showMessageDialog(null,ex.getMessage()); 
    }
        
          
    }
   
 
   
    
 
   
     public void ActivarBotones(){
       

     }
   
    
  
 
KEffectPanel PanelEffect = new KEffectPanel();
KEffectPanel PanelEffect2 = new KEffectPanel();


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//                this.panelColor = new JPanel();
//		this.panelColor.setBackground(Color.BLACK);
//		this.panelColor.setBorder(new LineBorder(new Color(0, 0, 0)));
//		this.panelColor.setBounds(133, 618, 43, 32);
//                
//     PanelEffect.setEffect(new SplitHorizontalFade (1000,panelColor.getBackground()));
//     PanelEffect.startEffect();
    
				
//PanelEffect.setEffect(new ZoomIn(1000));
//PanelEffect.startEffect();
//                                

//Date now = new Date();
//
//DateFormat df =  DateFormat.getDateInstance();
//DateFormat df1 = DateFormat.getDateInstance(DateFormat.SHORT);
//DateFormat df2 = DateFormat.getDateInstance(DateFormat.MEDIUM);
//DateFormat df3 = DateFormat.getDateInstance(DateFormat.LONG);
//DateFormat df4 = DateFormat.getDateInstance(DateFormat.FULL);
//String s =  df.format(now);
//String s1 = df1.format(now);
//String s2 = df2.format(now);
//String s3 = df3.format(now);
//String s4 = df4.format(now);
//System.out.println("(Default) Hoy es:" + s);
//System.out.println("(SHORT)   Hoy es:" + s1);
//System.out.println("(MEDIUM)  Hoy es:" + s2);
//System.out.println("(LONG)    Hoy es:" + s3);
//System.out.println("(FULL)    Hoy es:" + s4);

          
           
            PanelEffect.setEffect(new Shape(1000));
            PanelEffect.startEffect();
          
        
            

            //  String Dia, Mes, Ano;
//
//        Calendar c = new GregorianCalendar();
//
//        Dia = Integer.toString(c.get(Calendar.DATE));
//        Mes = Integer.toString(c.get(Calendar.MONTH)+1);
//        Ano = Integer.toString(c.get(Calendar.YEAR));
//
//        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
//        String strFecha =Dia+"-"+Mes+"-"+Ano ;
//        Date Fecha;
        
//        try {
//
//            Fecha = sdf.parse(strFecha);
//
//            jdFechaNacimiento.setMaxSelectableDate(Fecha);
//
//        } catch (ParseException ex) {
//        }
//
            
            
        try{    
            ActualizarTabla();
            ActualizarTablaU();

// TODO add your handling code here:
        } catch (ParseException ex) {
           
        }
        
        Begin = true;
  
        jFechaVence1.requestFocus();
        
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    MP.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed


  boolean Begin;
    
    private void TabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TabbedPaneStateChanged

        int index = TabbedPane.getSelectedIndex();
        
        if(Begin){
        if(index==0){
          
            
            PanelEffect.setEffect(new Shape(1000));
            PanelEffect.startEffect();
            cmbbusc.setSelectedIndex(0);
            jFechaVence1.requestFocus();
          
        }
        if(index==1){
           
            
            PanelEffect2.setEffect(new Shape(1000));
            PanelEffect2.startEffect();
            cmbbusc1.setSelectedIndex(0);
            jFechaVence.requestFocus();
        }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_TabbedPaneStateChanged

    private void btncancel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel3ActionPerformed
        MP.setVisible(true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancel3ActionPerformed

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        // TODO add your handling code here:

        File miDir = new File ("");
        String reporte = miDir.getAbsolutePath()+"\\src\\Reportes\\Inventario.jasper";

        JasperPrint jp = null;
        try {
            jp = JasperFillManager.fillReport(reporte, null,Conexion.con);
        } catch (JRException ex) {

            //                Logger.getLogger(InventarioP.class.getName()).log(Level.SEVERE, null, ex);
        }

        JasperViewer view = new JasperViewer(jp, false);
        view.setTitle("Inventarios - Sistema de Inventario y Facturaci√≥n RJ");

        view.setZoomRatio((float) 0.95);
        view.setVisible(true);

        view.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        view.toFront();
        //     this.toBack();

        //    this.setExtendedState(javax.swing.JFrame.CROSSHAIR_CURSOR);

    }//GEN-LAST:event_btnprintActionPerformed

    private void btnshowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowallActionPerformed

        try {
            ActualizarTabla();
            // TODO add your handling code here:
        } catch (ParseException ex) {
           
        }
    }//GEN-LAST:event_btnshowallActionPerformed

    private void TablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMousePressed

        ActivarBotones();  // TODO add your handling code here:
    }//GEN-LAST:event_TablaMousePressed

    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked

        ActivarBotones();
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaMouseClicked

    private void TablaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TablaFocusLost

        ActivarBotones();
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaFocusLost

    private void TablaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TablaFocusGained

        ActivarBotones();    // TODO add your handling code here:
    }//GEN-LAST:event_TablaFocusGained

    private void btnDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesactivarActionPerformed
        ActivarBotones();
        try {
            // Desactivar();
            ActualizarTabla();
            // TODO add your handling code here:
        } catch (ParseException ex) {
            Logger.getLogger(InventarioP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDesactivarActionPerformed

    private void btnDesactivarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDesactivarFocusLost
        ActivarBotones();    // TODO add your handling code here:
    }//GEN-LAST:event_btnDesactivarFocusLost

    private void btnDesactivarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDesactivarFocusGained
        ActivarBotones();     // TODO add your handling code here:
    }//GEN-LAST:event_btnDesactivarFocusGained

    private void btnVerDesactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerDesactActionPerformed

        //Modificar();
    }//GEN-LAST:event_btnVerDesactActionPerformed

    private void btnVerDesactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnVerDesactFocusLost
        ActivarBotones();    // TODO add your handling code here:
    }//GEN-LAST:event_btnVerDesactFocusLost

    private void btnVerDesactFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnVerDesactFocusGained
        ActivarBotones();     // TODO add your handling code here:
    }//GEN-LAST:event_btnVerDesactFocusGained

    private void btnAgotarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgotarseActionPerformed
       
        File miDir = new File ("");
        String reporte = miDir.getAbsolutePath()+"\\src\\Reportes\\ProdAgotarse.jasper";

        JasperPrint jp = null;
        try {
            jp = JasperFillManager.fillReport(reporte, null,Conexion.con);
        } catch (JRException ex) {

            //                Logger.getLogger(InventarioP.class.getName()).log(Level.SEVERE, null, ex);
        }

        JasperViewer view = new JasperViewer(jp, false);
        view.setTitle("Productos a agotarse - Sistema de Inventario y Facturaci√≥n RJ");

        view.setZoomRatio((float) 0.95);
        view.setVisible(true);

        view.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        view.toFront();        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgotarseActionPerformed

    private void btnVencerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVencerActionPerformed
     
        Calendar c1 = GregorianCalendar.getInstance();
   //     SimpleDateFormat sdf;
  //      sdf = new SimpleDateFormat("dd/MM/yyyy");
        c1.add(Calendar.MONTH, 5);
//        System.out.println("Fecha Formateada: "+sdf.format(c1.getTime())); 
        Date Fecha = c1.getTime();

        Map<String, Object> parametros = new HashMap<String, Object>();
        parametros.put("Fecha", Fecha);

          
            File miDir = new File ("");
        String reporte = miDir.getAbsolutePath()+"\\src\\Reportes\\UnidsVencerse.jasper";

        JasperPrint jp = null;
        try {
            jp = JasperFillManager.fillReport(reporte, parametros, Conexion.con);
        } catch (JRException ex) {

            //                Logger.getLogger(InventarioP.class.getName()).log(Level.SEVERE, null, ex);
        }

        JasperViewer view = new JasperViewer(jp, false);
        view.setTitle("Unidades a vencerse - Sistema de Inventario y Facturaci√≥n RJ");

        view.setZoomRatio((float) 0.95);
        view.setVisible(true);

        view.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        view.toFront();

// TODO add your handling code here:
    }//GEN-LAST:event_btnVencerActionPerformed

    private void txtBuscar1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscar1KeyReleased
BuscarU();        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscar1KeyReleased

    private void TablaUFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TablaUFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaUFocusGained

    private void TablaUFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TablaUFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaUFocusLost

    private void TablaUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaUMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaUMouseClicked

    private void TablaUMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaUMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaUMousePressed

    private void btnshowall1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowall1ActionPerformed
        try {
            ActualizarTablaU();        // TODO add your handling code here:
        } catch (ParseException ex) {
              }
    }//GEN-LAST:event_btnshowall1ActionPerformed

    private void btnprint1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprint1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnprint1ActionPerformed

    private void btncancel4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel4ActionPerformed
 MP.setVisible(true);
 dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancel4ActionPerformed

    private void cmbbusc1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbbusc1ItemStateChanged

        int index = cmbbusc1.getSelectedIndex();
        
        if(index == 0){
            jFechaVence.setVisible(true);
            txtBuscar1.setVisible(false);
            txtBuscar1.setText("");
            jFechaVence.requestFocus();
            
        }
        else{
            jFechaVence.setVisible(false);
            jFechaVence.setDate(new Date());
            txtBuscar1.setVisible(true);
            txtBuscar1.requestFocus();
        }
              // TODO add your handling code here:
    }//GEN-LAST:event_cmbbusc1ItemStateChanged

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        Buscar();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void cmbbuscItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbbuscItemStateChanged

        int index = cmbbusc.getSelectedIndex();
        
        if(index == 0){
            jFechaVence1.setVisible(true);
            txtBuscar.setVisible(false);
            txtBuscar.setText("");
            jFechaVence1.requestFocus();
            
        }
        else{
            jFechaVence1.setVisible(false);
            jFechaVence1.setDate(new Date());
            txtBuscar.setVisible(true);
            txtBuscar.requestFocus();
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_cmbbuscItemStateChanged

    private void jFechaVence1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFechaVence1PropertyChange
            
        Titulo();
       
        int index = cmbbusc.getSelectedIndex()+1;

        switch(index){

              case 1:

            try{
                String Buscar = "";
                
                try{
                 Buscar = jFechaVence1.getDate().toString();
                }catch(NullPointerException ex){
                    return;
                }
                DateFormat FormatD = new SimpleDateFormat("yyyy-MM-dd");
                Buscar = FormatD.format(jFechaVence1.getDate());
                
                model.setRowCount(0);
                
             
                
                resultado = Conexion.consulta("Select * from [dbo].[InventarioV] where Unids_Inventario  > 0 and"
                        + " Estado_DetCompra = 'Activo' and  "
                        + "[Fecha_Vencimiento] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
              Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                     +" x"+resultado.getString(4).trim()+" "+resultado.getString(5).trim()
                     +" "+resultado.getString(6).trim();
              Datos [2]= resultado.getString(7);
              Datos [3]= resultado.getString(8);
              Datos [4]= String.valueOf(resultado.getInt(9));
              Datos [5]= String.valueOf(resultado.getDouble(10));
              Datos [6]= String.valueOf(resultado.getDouble(11));
              Datos [7]= String.valueOf(resultado.getDouble(12));
              Datos [8]= String.valueOf(resultado.getDouble(13));
              Datos [9]= String.valueOf(resultado.getString(14));
              Datos [10]= String.valueOf(resultado.getInt(15));
   
              
              model.addRow(Datos);  
                    
          
                }
                

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;
               
       default:
           break;
        }

Tabla.setModel(model);
// TODO add your handling code here:
    }//GEN-LAST:event_jFechaVence1PropertyChange

    private void jFechaVencePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFechaVencePropertyChange
 TituloUnid();
       
        int index = cmbbusc1.getSelectedIndex()+1;

        switch(index){

              case 1:

            try{
                String Buscar = "";
                
                try{
                 Buscar = jFechaVence.getDate().toString();
                }catch(NullPointerException ex){
                    return;
                }
                DateFormat FormatD = new SimpleDateFormat("yyyy-MM-dd");
                Buscar = FormatD.format(jFechaVence.getDate());
                
                modelU.setRowCount(0);
                
             
                
                resultado = Conexion.consulta("Select * from [dbo].[InventarioUnidsV] where Unids_Inventario  > 0 and"
                        + " Estado_DetCompra = 'Activo' and  "
                        + "[Fecha_Vencimiento] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                  Object [] Datos = new Object [11]; 
              DateFormat Format = new SimpleDateFormat("MMMMM-yyyy", Locale.getDefault());
              
              Date A = resultado.getDate(1);
              String Fecha = Format.format(A);
            
              Datos [0]= Fecha;
              Datos [1]= resultado.getString(2).trim()+" "+resultado.getString(3).trim()
                         +" "+resultado.getString(4).trim();
              Datos [2]= resultado.getString(5);
              Datos [3]= resultado.getString(6);
              Datos [4]= String.valueOf(resultado.getInt(7));
              Datos [5]= String.valueOf(resultado.getDouble(8));
              Datos [6]= String.valueOf(resultado.getDouble(9));
              Datos [7]= String.valueOf(resultado.getDouble(10));
              Datos [8]= String.valueOf(resultado.getDouble(11));
              Datos [9]= String.valueOf(resultado.getString(12));
              Datos [10]= String.valueOf(resultado.getInt(13));
      
            
              
              modelU.addRow(Datos);  
                    
          
                }
                

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;
               
       default:
           break;
        }

TablaU.setModel(modelU);
        // TODO add your handling code here:
    }//GEN-LAST:event_jFechaVencePropertyChange

    
    
    DefaultTableModel model = new DefaultTableModel() {

        
        
    Class[] types = new Class [] {
  
        java.lang.String.class, java.lang.String.class, java.lang.String.class,
        java.lang.String.class, java.lang.String.class, java.lang.String.class, 
        java.lang.String.class, java.lang.String.class, java.lang.String.class,
        java.lang.String.class, java.lang.String.class
    };
 

    @Override
    public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
    }

  

    @Override
    public boolean isCellEditable(int row, int column) {
    
   
            return false;
    
       //all cells false
    
    }
};
    
      DefaultTableModel modelU = new DefaultTableModel() {

        
        
    Class[] types = new Class [] {
  
        java.lang.String.class, java.lang.String.class, java.lang.String.class,
        java.lang.String.class, java.lang.String.class, java.lang.String.class, 
        java.lang.String.class, java.lang.String.class, java.lang.String.class,
        java.lang.String.class, java.lang.String.class
    };
 

    @Override
    public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
    }

  

    @Override
    public boolean isCellEditable(int row, int column) {
    
   
            return false;
    
       //all cells false
    
    }
};
  
   
 
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventarioP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new InventarioP().setVisible(true);               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelVer;
    private javax.swing.JPanel PanelVerUnid;
    private org.edisoncor.gui.tabbedPane.TabbedPaneHeader TabbedPane;
    private javax.swing.JTable Tabla;
    private javax.swing.JTable TablaU;
    private javax.swing.JButton btnAgotarse;
    private javax.swing.JButton btnDesactivar;
    private javax.swing.JButton btnVencer;
    private javax.swing.JButton btnVerDesact;
    private javax.swing.JButton btncancel3;
    private javax.swing.JButton btncancel4;
    private javax.swing.JButton btnprint;
    private javax.swing.JButton btnprint1;
    private javax.swing.JButton btnshowall;
    private javax.swing.JButton btnshowall1;
    private javax.swing.JComboBox cmbbusc;
    private javax.swing.JComboBox cmbbusc1;
    private com.toedter.calendar.JDateChooser jFechaVence;
    private com.toedter.calendar.JDateChooser jFechaVence1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtBuscar1;
    // End of variables declaration//GEN-END:variables
}
