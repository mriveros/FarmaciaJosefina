/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Ventanas;

import Clases.CustomTextField;
import Procedimientos.Conexion;
import Procedimientos.Categoria;
import com.keffect.effects.animatedEffects.EntryBoucing;
import com.keffect.effects.animatedEffects.Shape;
import com.keffectpanel.KEffectPanel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Reymundo Tenorio
 */
public class CategoriaP extends javax.swing.JFrame {

    /**
     * Creates new form CategoriaP
     */
    
 
    public CategoriaP() {
        
        
        try {
            this.setIconImage(new ImageIcon(getClass().getResource("Icono.png")).getImage());
        } catch (NullPointerException ex) {
        }
         
         
         
        initComponents();
        
        this.setResizable(false);
//        Tabla.setFont(new java.awt.Font("Tahoma", 0, 18)); 
        Tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        
        
        /*COPIAR PEGAR DESACTIVAR*/
        
//         JTextComponent.KeyBinding[] newBindings = {
////        new JTextComponent.KeyBinding(
////          KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_MASK),
////          DefaultEditorKit.beepAction),
//        new JTextComponent.KeyBinding(
//          KeyStroke.getKeyStroke(KeyEvent.VK_V, InputEvent.CTRL_MASK),
//          DefaultEditorKit.beepAction),
////        new JTextComponent.KeyBinding(
////            KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_MASK),
////            DefaultEditorKit.beepAction)
////      
//         };
//            
//    Keymap k = txtNombre.getKeymap();
//    JTextComponent.loadKeymap(k, newBindings, txtNombre.getActions());
//    
    
        txtNombre.setTransferHandler(null);
     
       
//        MultipleEffect effects = new MultipleEffect();
//				effects.addEffect(new ShadowFrame(20));
//				effects.addEffect(new Shadow(1000));
//				effects.addEffect(new SplitHorizontalFade(1000));
//				effects.addEffect(new SplitVerticalFade(2000));
//				effects.addEffect(new DarkenReverse(6000,50));
//                                
           // PanelEffect.setEffect(effects);                    
   
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PopupMenu = new javax.swing.JPopupMenu();
        MnItemModificar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        MnItemActDes = new javax.swing.JMenuItem();
        TabbedPane = new org.edisoncor.gui.tabbedPane.TabbedPaneHeader();
        PanelNuevo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnnew = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        lblalerta = new javax.swing.JLabel();
        PanelVer = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbbusc = new javax.swing.JComboBox();
        txtbusc = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnActivar = new javax.swing.JButton();
        btnDesactivar = new javax.swing.JButton();
        btnmodify = new javax.swing.JButton();
        btnshowall = new javax.swing.JButton();
        btnprint = new javax.swing.JButton();
        btncancel3 = new javax.swing.JButton();

        MnItemModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ModificarIcon.png"))); // NOI18N
        MnItemModificar.setMnemonic('m');
        MnItemModificar.setText("Modificar");
        MnItemModificar.setToolTipText("Modificar Registro");
        MnItemModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnItemModificarActionPerformed(evt);
            }
        });
        PopupMenu.add(MnItemModificar);
        PopupMenu.add(jSeparator1);

        MnItemActDes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ActivarIcon.png"))); // NOI18N
        MnItemActDes.setMnemonic('a');
        MnItemActDes.setText("Activar");
        MnItemActDes.setToolTipText("Activar");
        MnItemActDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnItemActDesActionPerformed(evt);
            }
        });
        PopupMenu.add(MnItemActDes);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Categor√≠a");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TabbedPane.setColorDeBorde(new java.awt.Color(0, 204, 204));
        TabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TabbedPaneStateChanged(evt);
            }
        });

        //KEffectPanel effectPanel = new KEffectPanel();
        //PanelNuevo = effectPanel;
        PanelNuevo = PanelEffect;
        PanelNuevo.setBackground(new java.awt.Color(0, 153, 204));
        PanelNuevo.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        btnnew.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnnew.setForeground(new java.awt.Color(255, 255, 255));
        btnnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nuevo.png"))); // NOI18N
        btnnew.setMnemonic('n');
        btnnew.setText("Nuevo");
        btnnew.setToolTipText("Ingresar Nuevo Registro");
        btnnew.setContentAreaFilled(false);
        btnnew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnnew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });
        jPanel1.add(btnnew);

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsave.setForeground(new java.awt.Color(255, 255, 255));
        btnsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar.png"))); // NOI18N
        btnsave.setMnemonic('g');
        btnsave.setText("Guardar");
        btnsave.setToolTipText("Guardar Registro");
        btnsave.setContentAreaFilled(false);
        btnsave.setEnabled(false);
        btnsave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnsave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnsave);

        btncancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel.setForeground(new java.awt.Color(255, 255, 255));
        btncancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btncancel.setMnemonic('c');
        btncancel.setText("Cancelar");
        btncancel.setToolTipText("Cancelar / Salir");
        btncancel.setContentAreaFilled(false);
        btncancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });
        jPanel1.add(btncancel);

        PanelNuevo.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel6.setBackground(new java.awt.Color(0, 153, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informaci√≥n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N

        jPanel3.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre");

        /*CustomTextField customTextField = new CustomTextField(100);
        txtNombre = customTextField;
        customTextField.setPlaceholder("Ingrese Nombres del Ejecutivo");
        customTextField.setFont(new java.awt.Font("Tahoma", 0, 18));
        customTextField.setForeground(Color.BLACK);
        customTextField.setPlaceholderForeground(Color.LIGHT_GRAY);*/
        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtNombre.setToolTipText("Ingrese Nombres");
        txtNombre.setEnabled(false);
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Descripci√≥n");

        /*CustomTextFieldArea customTextField2 = new CustomTextFieldArea();
        txtDescripcion = customTextField2;
        customTextField2.setPlaceholder("Ingrese Direcci√≥n del Ejecutivo");
        customTextField2.setFont(new java.awt.Font("Tahoma", 0, 18));
        customTextField2.setForeground(Color.BLACK);
        customTextField2.setPlaceholderForeground(Color.LIGHT_GRAY);*/
        txtDescripcion.setColumns(20);
        txtDescripcion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDescripcion.setRows(5);
        txtDescripcion.setToolTipText("Ingrese Direcci√≥n");
        txtDescripcion.setEnabled(false);
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtDescripcion);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        lblalerta.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblalerta.setForeground(new java.awt.Color(255, 255, 0));
        lblalerta.setText("Alertas");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblalerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(100, 100, 100))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(lblalerta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        PanelNuevo.add(jPanel6, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Nuevo", PanelNuevo);

        PanelVer = PanelEffect2;
        PanelVer.setBackground(new java.awt.Color(0, 153, 204));
        PanelVer.setLayout(new javax.swing.BoxLayout(PanelVer, javax.swing.BoxLayout.LINE_AXIS));

        jPanel7.setBackground(new java.awt.Color(0, 153, 204));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel4.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar Por: ");

        cmbbusc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbbusc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No.", "Nombre", "Estado" }));
        cmbbusc.setToolTipText("Buscar Por:");

        txtbusc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtbusc.setToolTipText("Buscar");
        CustomTextField customTextField9 = new CustomTextField(100);
        txtbusc = customTextField9;
        customTextField9.setPlaceholder("Ingrese Informaci√≥n a Buscar");
        customTextField9.setFont(new java.awt.Font("Tahoma", 0, 16));
        customTextField9.setForeground(Color.BLACK);
        customTextField9.setPlaceholderForeground(Color.LIGHT_GRAY);
        txtbusc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscKeyReleased(evt);
            }
        });
        /*txtbusc = new AutoComplete.AutoCompletar();
        ((AutoCompletar)txtbusc).setDesplegable(new DesplegableJPopUPMenu(txtbusc));
        ModeloAutoCompletar modelo1 = new ModeloVendNames();
        ((AutoCompletar)txtbusc).setModelo(modelo1);
        ((AutoCompletar)txtbusc).getDesplegable().setForeground(new Color(102,153,255));
        ((AutoCompletar)txtbusc).addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscTyped(evt);
            }
        });
        ((AutoCompletar)txtbusc).setToolTipText("Ingresar Dato a Buscar");*/

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cmbbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtbusc, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Tabla.setToolTipText("Lista Registros");
        Tabla.setComponentPopupMenu(PopupMenu);
        Tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Tabla.getTableHeader().setReorderingAllowed(false);
        Tabla.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TablaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TablaFocusLost(evt);
            }
        });
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(Tabla);

        jPanel7.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(0, 102, 153));

        btnActivar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnActivar.setForeground(new java.awt.Color(255, 255, 255));
        btnActivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ActivarR.png"))); // NOI18N
        btnActivar.setMnemonic('A');
        btnActivar.setText("Activar");
        btnActivar.setToolTipText("Activar");
        btnActivar.setContentAreaFilled(false);
        btnActivar.setEnabled(false);
        btnActivar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnActivar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnActivar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnActivarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnActivarFocusLost(evt);
            }
        });
        btnActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarActionPerformed(evt);
            }
        });
        jPanel5.add(btnActivar);

        btnDesactivar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDesactivar.setForeground(new java.awt.Color(255, 255, 255));
        btnDesactivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DesctivarR.png"))); // NOI18N
        btnDesactivar.setMnemonic('D');
        btnDesactivar.setText("Desactivar");
        btnDesactivar.setToolTipText("Desactivar");
        btnDesactivar.setContentAreaFilled(false);
        btnDesactivar.setEnabled(false);
        btnDesactivar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDesactivar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDesactivar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnDesactivarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnDesactivarFocusLost(evt);
            }
        });
        btnDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesactivarActionPerformed(evt);
            }
        });
        jPanel5.add(btnDesactivar);

        btnmodify.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnmodify.setForeground(new java.awt.Color(255, 255, 255));
        btnmodify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        btnmodify.setMnemonic('o');
        btnmodify.setText("Modificar");
        btnmodify.setToolTipText("Modificar Registro");
        btnmodify.setContentAreaFilled(false);
        btnmodify.setEnabled(false);
        btnmodify.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnmodify.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnmodify.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnmodifyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnmodifyFocusLost(evt);
            }
        });
        btnmodify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodifyActionPerformed(evt);
            }
        });
        jPanel5.add(btnmodify);

        btnshowall.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnshowall.setForeground(new java.awt.Color(255, 255, 255));
        btnshowall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TablaTodos.png"))); // NOI18N
        btnshowall.setMnemonic('m');
        btnshowall.setText("Mostrar Todos");
        btnshowall.setToolTipText("Mostrar Todos Los Registros");
        btnshowall.setContentAreaFilled(false);
        btnshowall.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnshowall.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnshowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowallActionPerformed(evt);
            }
        });
        jPanel5.add(btnshowall);

        btnprint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnprint.setForeground(new java.awt.Color(255, 255, 255));
        btnprint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Imprimir.png"))); // NOI18N
        btnprint.setMnemonic('i');
        btnprint.setText("Imprimir");
        btnprint.setToolTipText("Imprimir/Mostrar Reporte");
        btnprint.setContentAreaFilled(false);
        btnprint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnprint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });
        jPanel5.add(btnprint);

        btncancel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel3.setForeground(new java.awt.Color(255, 255, 255));
        btncancel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btncancel3.setMnemonic('c');
        btncancel3.setText("Cancelar");
        btncancel3.setToolTipText("Cancelar / Salir");
        btncancel3.setContentAreaFilled(false);
        btncancel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel3ActionPerformed(evt);
            }
        });
        jPanel5.add(btncancel3);

        jPanel7.add(jPanel5, java.awt.BorderLayout.SOUTH);

        PanelVer.add(jPanel7);

        TabbedPane.addTab("Ver", PanelVer);

        getContentPane().add(TabbedPane, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(829, 602));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
   // private int ID_Categoria;
    private boolean Modify;
    private MenuPrincipal MP;

    

   
 
    public void setMP(MenuPrincipal MP) {
        this.MP = MP;
    }
    
    
    public static ResultSet resultado;

    int ID_Categoria;
   
    
    public void Guardar (){
        
        
        String Nombre, Descripcion, FotoP;
      
        Nombre = txtNombre.getText().trim();  
        Descripcion = txtDescripcion.getText().trim();      
       
     
         
        
          if("".equals(Descripcion))  {
            Descripcion = "No Ingresada";
           }
       
          if("".equals(Nombre))  {
            JOptionPane.showMessageDialog(this,"Ingrese El Nombre","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
           }
          
      
    
         
         int IDC1 = 0;  
 
                try{
    
    resultado = Conexion.consulta("Select [ID_Categoria] from [dbo].[Categoria] where [ID_Categoria] != "+ID_Categoria+" and "
            + " [Nombre_Categoria] = '"+Nombre+"'");
    
    while(resultado.next()){
        IDC1 = resultado.getInt(1);
    }
    }catch(SQLException ex){

    }     

if(IDC1 != 0){
    JOptionPane.showMessageDialog(this, "Nombre de la Categoria "+Nombre+" ya Existe en el Registro", "Nombre ya Registrado", JOptionPane.ERROR_MESSAGE);
    return;
}
//        if("".equals(Foto) && Modify == false)  {
//            JOptionPane.showMessageDialog(this,"Seleccione La Fotograf√≠a","Seleccione",JOptionPane.ERROR_MESSAGE);
//            return;
//           }
       


            if(Modify==true){

                int ID = ID_Categoria;
           
                Categoria.Actualizar_Categoria(ID, Nombre, Descripcion);
                
                
                ActualizarTabla();
                CleanAll();
                DisableAll();
                Modify = false;
                
            }
            else{

               
                Categoria.Agregar_Categoria(Nombre, Descripcion);
                ActualizarTabla();
                CleanAll();
                DisableAll();

            }
    }
    
    public void CleanAll(){
        
        txtNombre.setText("");
        txtDescripcion.setText("");
        ID_Categoria = 0;   
        Modify = false;
        
    }
    
    public void EnableAll(){
        
        txtNombre.setEnabled(true);
        txtDescripcion.setEnabled(true);
        btnsave.setEnabled(true); 
 
    }
    
      public void DisableAll(){
     
        txtNombre.setEnabled(false);
        txtDescripcion.setEnabled(false);
        btnsave.setEnabled(false);
       
        
    }
    
    
 
    public void Titulo(){
        
        Object [] Titulo = {"","No.","Nombre", "Descripci√≥n", "Fecha Ingreso", 
            "Registrado Por", "Estado"};
        
       
        model.setColumnIdentifiers(Titulo);
      
        this.Tabla.setModel(model);
        
        JTableHeader header = Tabla.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
   
      Tabla.setDefaultRenderer(Object.class, new FormatoTabla());
       
      CheckBoxHeader(); 
    }
   
    
    
   public void ActualizarTabla(){
        
         
     Titulo();
     
       model.setRowCount(0);
       Tabla.setModel(model);
       
      
        try{
            
        
        resultado = Conexion.consulta("Select * from [dbo].[CategoriaV]");


     
       while (resultado.next())
       {     
              Object [] Datos = new Object [7]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              java.util.Date FechaI = resultado.getDate(4);
              DateFormat df4 = DateFormat.getDateInstance(DateFormat.FULL);
              String Fecha = df4.format(FechaI);
              Datos [4]= Fecha;
              String Empleado = resultado.getString(5).trim()+" "+resultado.getString(6).trim();
              Datos [5]= Empleado;
              Datos [6]= resultado.getString(7);
             
              
              model.addRow(Datos);  
   
    }
       
       Tabla.setModel(model);
    
   
//        Tabla.getColumnModel().getColumn( 10 ).setCellEditor( new Celda_CheckBox() );
//        //para pintar la columna con el CheckBox en la tabla, en este caso, la primera columna
//        Tabla.getColumnModel().getColumn( 10 ).setCellRenderer(new Render_CheckBox());      

        
    }   catch (SQLException ex) {
      JOptionPane.showMessageDialog(null,ex.getMessage()); 
    }
        
          
    }
   
   public void Buscar(){
       
       Titulo();
       
        int index = cmbbusc.getSelectedIndex()+1;

        switch(index){

            case 1:

            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[CategoriaV] where [ID_Categoria] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
              Object [] Datos = new Object [7]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              java.util.Date FechaI = resultado.getDate(4);
              DateFormat df4 = DateFormat.getDateInstance(DateFormat.FULL);
              String Fecha = df4.format(FechaI);
              Datos [4]= Fecha;
              String Empleado = resultado.getString(5).trim()+" "+resultado.getString(6).trim();
              Datos [5]= Empleado;
              Datos [6]= resultado.getString(7);
             
              
              model.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;

              case 2:

            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[CategoriaV] where [Nombre_Categoria] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
               Object [] Datos = new Object [7]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              java.util.Date FechaI = resultado.getDate(4);
              DateFormat df4 = DateFormat.getDateInstance(DateFormat.FULL);
              String Fecha = df4.format(FechaI);
              Datos [4]= Fecha;
              String Empleado = resultado.getString(5).trim()+" "+resultado.getString(6).trim();
              Datos [5]= Empleado;
              Datos [6]= resultado.getString(7);
              
              model.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;
               
                   case 3:

            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[CategoriaV] where [Estado_Categoria] like '%"+Buscar+"%'");

                while (resultado.next())
                {
             
                    
               Object [] Datos = new Object [7]; 

              Datos [0]= false;
              Datos [1]= String.valueOf(resultado.getInt(1));    
              Datos [2]= resultado.getString(2);
              Datos [3]= resultado.getString(3);
              java.util.Date FechaI = resultado.getDate(4);
              DateFormat df4 = DateFormat.getDateInstance(DateFormat.FULL);
              String Fecha = df4.format(FechaI);
              Datos [4]= Fecha;
              String Empleado = resultado.getString(5).trim()+" "+resultado.getString(6).trim();
              Datos [5]= Empleado;
              Datos [6]= resultado.getString(7);
              
              model.addRow(Datos);  
                    
          
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No Encontrado");
            }

            break;

            default:

            break;

          
        
        }
        Tabla.setModel(model);
                
   }

   
    
   
    private void txtbuscKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscKeyReleased
       Buscar();
// TODO add your handling code here:
    }//GEN-LAST:event_txtbuscKeyReleased

    
 
   
     public void ActivarBotones(){
       

   
      boolean Checkbox = false;
      
      for(int j=0; j<Tabla.getRowCount(); j++){
        
          Checkbox = (boolean) Tabla.getValueAt(j, 0);
          
          if(Checkbox == true){      
            
             btnActivar.setEnabled(true);
             btnDesactivar.setEnabled(true);
             
              break;
          }
       }
      
      
       
      int Fila = Tabla.getSelectedRow();
        
      if(Checkbox == false){
      
           btnActivar.setEnabled(false);
           btnDesactivar.setEnabled(false);

        if (Fila > -1){

            btnmodify.setEnabled(true);
          
            MnItemActDes.setEnabled(true);
            MnItemModificar.setEnabled(true);

            String Estado = ((String)this.Tabla.getModel().getValueAt(Fila, 6));
     

            if("Activo".equalsIgnoreCase(Estado)){
        MnItemActDes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/DesactivarIcon.png"))); // NOI18N
        MnItemActDes.setText("Desactivar");
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
        MnItemActDes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ActivarIcon.png"))); // NOI18N
        MnItemActDes.setText("Activar");
            }
   
        }
        else{
            btnmodify.setEnabled(false);
            MnItemActDes.setEnabled(false);
            MnItemModificar.setEnabled(false);
    
        }  
      }

      
        if (Fila > -1){
              btnmodify.setEnabled(true);
              MnItemActDes.setEnabled(true);
              MnItemModificar.setEnabled(true);
        }
        else{
              btnmodify.setEnabled(false);
              MnItemActDes.setEnabled(false);
              MnItemModificar.setEnabled(false);
        }
     
     }
   
    
    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
      
   ActivarBotones();
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaMouseClicked

    private void TablaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TablaFocusLost
        
   ActivarBotones();
   // TODO add your handling code here:
    }//GEN-LAST:event_TablaFocusLost

    private void btnActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarActionPerformed

       ActivarBotones();
       Activar();
       ActualizarTabla();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActivarActionPerformed

   public void Activar(){
       
       
       int ID, Opcion;
       boolean Flag;
      
             
             Opcion= JOptionPane.showConfirmDialog(this, "Est√° Seguro Que Desea Activar Categoria(s) ?", "Confirmaci√≥n", JOptionPane.YES_NO_OPTION);
            
            if(Opcion==JOptionPane.YES_OPTION){

                 
        for(int i=0; i<Tabla.getRowCount();i++){
            
            
            Flag = (boolean) this.Tabla.getModel().getValueAt(i, 0);
      
         if(Flag == true){
               ID= Integer.parseInt(this.Tabla.getModel().getValueAt(i, 1).toString());
      
               Categoria.Activar_Categoria(ID);
         }
               
            }
         JOptionPane.showMessageDialog(this, "Categoria(s) Activada(s) Con √âxito", "Activado(s) Con √âxito", JOptionPane.INFORMATION_MESSAGE);

        }

    }
 
   
     public void Desactivar(){
       
       
       int ID, Opcion;
       boolean Flag;
      
             
             Opcion= JOptionPane.showConfirmDialog(this, "Est√° Seguro Que Desea Desactivar Categoria(s) ?", "Confirmaci√≥n", JOptionPane.YES_NO_OPTION);
            
            if(Opcion==JOptionPane.YES_OPTION){

                 
        for(int i=0; i<Tabla.getRowCount();i++){
            
            
            Flag = (boolean) this.Tabla.getModel().getValueAt(i, 0);
      
         if(Flag == true){
               ID= Integer.parseInt(this.Tabla.getModel().getValueAt(i, 1).toString());
      
               Categoria.Desactivar_Categoria(ID);
         }
               
            }
         JOptionPane.showMessageDialog(this, "Categoria(s) Desactivada(s) Con √âxito", "Activado(s) Con √âxito", JOptionPane.INFORMATION_MESSAGE);

        }

    }

   
    private void btnActivarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnActivarFocusGained
       
        
        ActivarBotones();
 
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActivarFocusGained

    public void Modificar(){
         int fila = Tabla.getSelectedRow();

        int ID;
        String Nombre, Descripcion;
        
        if (fila > -1){

            ID= Integer.parseInt(this.Tabla.getModel().getValueAt(fila, 1).toString());
            Nombre=((String)this.Tabla.getModel().getValueAt(fila, 2));
            Descripcion=((String)this.Tabla.getModel().getValueAt(fila, 3));
           

            CleanAll();
            EnableAll();

        
        ID_Categoria = ID;
        txtNombre.setText(Nombre);
        txtDescripcion.setText(Descripcion);
      
            TabbedPane.setSelectedComponent(PanelNuevo);
            Modify=true;

        }

        else{

            JOptionPane.showMessageDialog(this, "Seleccione Una Categoria a Modificar", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }
    
    private void btnmodifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodifyActionPerformed

        ActivarBotones();      
        Modificar();
       
    }//GEN-LAST:event_btnmodifyActionPerformed

    private void btnmodifyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnmodifyFocusGained
        ActivarBotones();     // TODO add your handling code here:
    }//GEN-LAST:event_btnmodifyFocusGained

    private void btnshowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowallActionPerformed
    
        ActualizarTabla();  
        // TODO add your handling code here:
    }//GEN-LAST:event_btnshowallActionPerformed

   
    
  
    
    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        // TODO add your handling code here:
       
 
        File miDir = new File ("");
        String reporte = miDir.getAbsolutePath()+"\\src\\Reportes\\Categoria.jasper";

        JasperPrint jp = null;
        try {
                jp = JasperFillManager.fillReport(reporte, null,Conexion.con);
            } catch (JRException ex) {
    
//                Logger.getLogger(CategoriaP.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        JasperViewer view = new JasperViewer(jp, false);
        view.setTitle("Categorias - Sistema de Inventario y Facturaci√≥n RJ");
        
        view.setZoomRatio((float) 0.95);
        view.setVisible(true);
        
        view.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        view.toFront();
   //     this.toBack();
        
   //    this.setExtendedState(javax.swing.JFrame.CROSSHAIR_CURSOR); 
        
        
    }//GEN-LAST:event_btnprintActionPerformed

    private void btncancel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel3ActionPerformed
        MP.setVisible(true);  
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancel3ActionPerformed

    private void TabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TabbedPaneStateChanged

   int index = TabbedPane.getSelectedIndex();
   if(index==0){
     
      PanelEffect.setEffect(new EntryBoucing(1000));
      PanelEffect.startEffect();
   }
   if(index==1){
     
      PanelEffect2.setEffect(new Shape(1000));
      PanelEffect2.startEffect();
      txtbusc.requestFocus();
   }
   
         // TODO add your handling code here:
    }//GEN-LAST:event_TabbedPaneStateChanged


    
KEffectPanel PanelEffect = new KEffectPanel();
KEffectPanel PanelEffect2 = new KEffectPanel();


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//                this.panelColor = new JPanel();
//		this.panelColor.setBackground(Color.BLACK);
//		this.panelColor.setBorder(new LineBorder(new Color(0, 0, 0)));
//		this.panelColor.setBounds(133, 618, 43, 32);
//                
//     PanelEffect.setEffect(new SplitHorizontalFade (1000,panelColor.getBackground()));
//     PanelEffect.startEffect();
    
				
PanelEffect.setEffect(new EntryBoucing(1000));
PanelEffect.startEffect();
                                

//Date now = new Date();
//
//DateFormat df =  DateFormat.getDateInstance();
//DateFormat df1 = DateFormat.getDateInstance(DateFormat.SHORT);
//DateFormat df2 = DateFormat.getDateInstance(DateFormat.MEDIUM);
//DateFormat df3 = DateFormat.getDateInstance(DateFormat.LONG);
//DateFormat df4 = DateFormat.getDateInstance(DateFormat.FULL);
//String s =  df.format(now);
//String s1 = df1.format(now);
//String s2 = df2.format(now);
//String s3 = df3.format(now);
//String s4 = df4.format(now);
//System.out.println("(Default) Hoy es:" + s);
//System.out.println("(SHORT)   Hoy es:" + s1);
//System.out.println("(MEDIUM)  Hoy es:" + s2);
//System.out.println("(LONG)    Hoy es:" + s3);
//System.out.println("(FULL)    Hoy es:" + s4);

 
        //this.setResizable(false);
        
        
        
       //  String Dia, Mes, Ano;
//
//        Calendar c = new GregorianCalendar();
//
//        Dia = Integer.toString(c.get(Calendar.DATE));
//        Mes = Integer.toString(c.get(Calendar.MONTH)+1);
//        Ano = Integer.toString(c.get(Calendar.YEAR));
//
//        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
//        String strFecha =Dia+"-"+Mes+"-"+Ano ;
//        Date Fecha;
        
//        try {
//
//            Fecha = sdf.parse(strFecha);
//
//            jdFechaNacimiento.setMaxSelectableDate(Fecha);
//
//        } catch (ParseException ex) {
//        }
//        
      
       
       
      ActualizarTabla();
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    MP.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void btnActivarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnActivarFocusLost
 
      ActivarBotones();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActivarFocusLost

    private void btnmodifyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnmodifyFocusLost
      ActivarBotones();    // TODO add your handling code here:
    }//GEN-LAST:event_btnmodifyFocusLost

    private void TablaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TablaFocusGained

      ActivarBotones();    // TODO add your handling code here:
    }//GEN-LAST:event_TablaFocusGained

    private void TablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMousePressed
  
      ActivarBotones();  // TODO add your handling code here:
    }//GEN-LAST:event_TablaMousePressed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed

        MP.setVisible(true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancelActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed

        Guardar();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed

        EnableAll();
        CleanAll();
          
              
    }//GEN-LAST:event_btnnewActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
char a = evt.getKeyChar();

if(!Character.isLetter(a)&&!Character.isISOControl(a)){
        Toolkit.getDefaultToolkit().beep();
        evt.consume();
    }
if(a == KeyEvent.VK_ENTER){
    txtDescripcion.requestFocus();
}
// TODO add your handling code here:
    }//GEN-LAST:event_txtNombreKeyTyped

    
    

    private void MnItemModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnItemModificarActionPerformed
        Modificar();      // TODO add your handling code here:
    }//GEN-LAST:event_MnItemModificarActionPerformed

    
    public void ActivarDesactivar(){
        int fila = Tabla.getSelectedRow();

        int ID;
        String Nombre;
        int v=JOptionPane.NO_OPTION;
        String Estado;


        if (fila > -1){
            
            

            ID= Integer.parseInt(this.Tabla.getModel().getValueAt(fila, 1).toString());
            Nombre=((String)this.Tabla.getModel().getValueAt(fila, 2));
            Estado = ((String)this.Tabla.getModel().getValueAt(fila,6));

           
            
            if("Activo".equalsIgnoreCase(Estado)){
                
                v= JOptionPane.showConfirmDialog(this, "Est√° Seguro Que Desea Desactivar la Categoria "+Nombre.trim()+"?", "Confirmaci√≥n", JOptionPane.YES_NO_OPTION);
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             
                v= JOptionPane.showConfirmDialog(this, "Est√° Seguro Que Desea Activar la Categoria "+Nombre.trim()+"?", "Confirmaci√≥n", JOptionPane.YES_NO_OPTION);
            }

            if(v==JOptionPane.YES_OPTION){

                
                Categoria.Activar_Desactivar_Categoria(ID);
               
                ActualizarTabla();
            }
        }

        else{

            JOptionPane.showMessageDialog(this, "Seleccione Una Categoria a Activar/Desactivar", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }
    
    
    
    private void MnItemActDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnItemActDesActionPerformed
        ActivarDesactivar();        // TODO add your handling code here:
    }//GEN-LAST:event_MnItemActDesActionPerformed

    private void btnDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesactivarActionPerformed
ActivarBotones();
Desactivar();
ActualizarTabla();
// TODO add your handling code here:
    }//GEN-LAST:event_btnDesactivarActionPerformed

    private void btnDesactivarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDesactivarFocusGained
   ActivarBotones();     // TODO add your handling code here:
    }//GEN-LAST:event_btnDesactivarFocusGained

    private void btnDesactivarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnDesactivarFocusLost
    ActivarBotones();    // TODO add your handling code here:
    }//GEN-LAST:event_btnDesactivarFocusLost

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
     // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionKeyTyped

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
 String Nombre = txtNombre.getText();
 
 int ID = 0;       
try{
    
    resultado = Conexion.consulta("Select [ID_Categoria] from [dbo].[Categoria] where [ID_Categoria] != "+ID_Categoria+" and "
            + "[Nombre_Categoria] = '"+Nombre+"'");
    
    while(resultado.next()){
        ID = resultado.getInt(1);
    }
}catch(SQLException ex){

}     

if(ID != 0){
    txtNombre.setBackground(new java.awt.Color(255, 204, 204));
    lblalerta.setText("Nombre de la Categoria ya se registr√≥ en la Base de Datos");
}
else{
    txtNombre.setBackground(new java.awt.Color(255,255,255));
    lblalerta.setText("");
}        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreFocusLost

    
    
    DefaultTableModel model = new DefaultTableModel() {

        
        
    Class[] types = new Class [] {
  
        java.lang.Boolean.class,java.lang.String.class, java.lang.String.class, 
        java.lang.String.class, java.lang.String.class, java.lang.String.class, 
        java.lang.String.class
    };
 

    @Override
    public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
    }

  

    @Override
    public boolean isCellEditable(int row, int column) {
    
     if(column == 0){
            return true;
        }else{
            return false;
    }
       //all cells false
    
    }
};
    
    
    
    
     public class FormatoTabla extends DefaultTableCellRenderer
{
 @Override
 public Component getTableCellRendererComponent
 (JTable table, Object value, boolean selected, boolean focused, int row, int column)
 {
         
  if(String.valueOf(table.getValueAt(row,6)).equalsIgnoreCase("Inactivo"))  {
      setForeground(Color.RED);
  }
   else { setForeground(Color.BLACK);
   }
  
//   if(String.valueOf(table.getValueAt(row,9)).equalsIgnoreCase("Si"))  {
//      setForeground(Color.GREEN);
//  }
                  
    
 super.getTableCellRendererComponent(table, value, selected, focused, row, column);
 return this;
 }
 }
   
     
 public class CheckBoxHeader extends JCheckBox  implements TableCellRenderer, MouseListener {  
 
  protected CheckBoxHeader rendererComponent;  
  protected int column;  
  protected boolean mousePressed = false;  
  
  public CheckBoxHeader(ItemListener itemListener) {  
    rendererComponent = this;  
    rendererComponent.addItemListener(itemListener);  
  }  
  @Override
  public Component getTableCellRendererComponent(  
      JTable table, Object value,  
      boolean isSelected, boolean hasFocus, int row, int column) {  
    if (table != null) {  
      JTableHeader header = table.getTableHeader();  
      if (header != null) {  
        rendererComponent.setForeground(header.getForeground());  
        rendererComponent.setBackground(header.getBackground());  
        rendererComponent.setFont(header.getFont());  
        header.addMouseListener(rendererComponent);  
      }  
    }  
    setColumn(column);  
    rendererComponent.setText("Selecc. Todo");  
    setBorder(UIManager.getBorder("TableHeader.cellBorder"));  
    return rendererComponent;  
  }  
  protected void setColumn(int column) {  
    this.column = column;  
  }  
  public int getColumn() {  
    return column;  
  }  
  
  protected void handleClickEvent(MouseEvent e) {  
    if (mousePressed) {  
      mousePressed=false;  
      JTableHeader header = (JTableHeader)(e.getSource());  
      JTable tableView = header.getTable();  
      TableColumnModel columnModel = tableView.getColumnModel();  
      int viewColumn = columnModel.getColumnIndexAtX(e.getX());  
      int columna = tableView.convertColumnIndexToModel(viewColumn);  
   
      if (viewColumn == this.column && e.getClickCount() == 1 && columna != -1) {  
        doClick();  
      }  
    }  
  } 
  
  @Override
  public void mouseClicked(MouseEvent e) {  
    handleClickEvent(e);  
    ((JTableHeader)e.getSource()).repaint();  
  }  
  @Override
  public void mousePressed(MouseEvent e) {  
    mousePressed = true;  
  }  
  @Override
  public void mouseReleased(MouseEvent e) {  
  }  
  @Override
  public void mouseEntered(MouseEvent e) {  
  }  
  @Override
  public void mouseExited(MouseEvent e) {  
  }  
}  

 public void CheckBoxHeader()  
  {  
   
    TableColumn tc = Tabla.getColumnModel().getColumn(0);  //No Columna
    tc.setCellEditor(Tabla.getDefaultEditor(Boolean.class));  
    tc.setCellRenderer(Tabla.getDefaultRenderer(Boolean.class));  
    tc.setHeaderRenderer(new CheckBoxHeader(new MyItemListener()));  
   
  }  
  class MyItemListener implements ItemListener  
  {  
    @Override
    public void itemStateChanged(ItemEvent e) {  
      Object source = e.getSource();  
      if (source instanceof AbstractButton == false) return;  
      boolean checked = e.getStateChange() == ItemEvent.SELECTED;  
      for(int x = 0, y = Tabla.getRowCount(); x < y; x++)  
      {  
        Tabla.setValueAt(checked,x,0);  //No Columna
      }  
    }
    

  }  
 
      
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoriaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new CategoriaP().setVisible(true);               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MnItemActDes;
    private javax.swing.JMenuItem MnItemModificar;
    private javax.swing.JPanel PanelNuevo;
    private javax.swing.JPanel PanelVer;
    private javax.swing.JPopupMenu PopupMenu;
    private org.edisoncor.gui.tabbedPane.TabbedPaneHeader TabbedPane;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton btnActivar;
    private javax.swing.JButton btnDesactivar;
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btncancel3;
    private javax.swing.JButton btnmodify;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnprint;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnshowall;
    private javax.swing.JComboBox cmbbusc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblalerta;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtbusc;
    // End of variables declaration//GEN-END:variables
}
