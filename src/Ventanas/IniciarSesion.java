/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.CustomTextField;
import Clases.CustomTextFieldPass;
import Clases.GuardarLeerCamara;
import Clases.GuardarLeerVentanas;
import Clases.StringMD;
import Clases.URLabel;
import Procedimientos.Conexion;
import com.keffect.effects.animatedEffects.ZoomIn;
import com.keffectpanel.KEffectPanel;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import static java.lang.System.currentTimeMillis;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import javax.mail.MessagingException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Reymundo Tenorio
 */
public class IniciarSesion extends javax.swing.JFrame {

    private boolean conected;

    /**
     * Creates new form IniciarSesion
     */

    /**
     * Creates new form IniciarSesion
     *
     * @throws java.io.IOException
     */
    public IniciarSesion() throws IOException {

        try {
            this.setIconImage(new ImageIcon(getClass().getResource("Icono.png")).getImage());
        } catch (NullPointerException ex) {
        }

        initComponents();

        this.jProgressBar1.setVisible(false);

        this.setResizable(false);
        this.setUndecorated(true);

        stopper = new Timer(2000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Load.dispose();
//                PanelEffect.setEffect(new ZoomIn(1000));
//                PanelEffect.startEffect();
//                stopper.stop();
            }
        });
        GuardarLeerCamara GC = new GuardarLeerCamara();

        int cam = 0;
        cam = GC.DatoCamara();

        Alert = new Alerta(cam);
        Alert.setInicio(this);

    }

    Alerta Alert;

    Loading Load = new Loading();
    static Timer stopper;

    public void setProcess() {
        setWaitProcess();
    }

    public void setWaitProcess() {
        Load.setVisible(true);
        if (!stopper.isRunning()) {
            stopper.start();
        }
    }

    public boolean isConected() {
        return conected;
    }

    public void setConected(boolean conected) {
        this.conected = conected;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(100, 0), new java.awt.Dimension(32767, 0));
        btnconnect = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 2), new java.awt.Dimension(0, 2), new java.awt.Dimension(32767, 2));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 1), new java.awt.Dimension(0, 1), new java.awt.Dimension(32767, 1));
        ckshow = new javax.swing.JCheckBox();
        txtVerPass = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Inicio de Sesión");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Panel = PanelEffect;
        Panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true));
        Panel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel4 = LabelForget;
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Has olvidado tu Contraseña?");
        jPanel1.add(jLabel4);
        jPanel1.add(filler3);

        btnconnect.setBackground(new java.awt.Color(255, 255, 0));
        btnconnect.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnconnect.setForeground(new java.awt.Color(51, 51, 51));
        btnconnect.setMnemonic('i');
        btnconnect.setText("Iniciar Sesión");
        btnconnect.setToolTipText("Inicar Sesión");
        btnconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconnectActionPerformed(evt);
            }
        });
        jPanel1.add(btnconnect);

        btncancel.setBackground(new java.awt.Color(255, 0, 0));
        btncancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btncancel.setForeground(new java.awt.Color(51, 51, 51));
        btncancel.setMnemonic('c');
        btncancel.setText("Cancelar");
        btncancel.setToolTipText("Cancelar / Salir");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });
        jPanel1.add(btncancel);

        Panel.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Usuario");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Contraseña      ");

        txtPass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPass.setToolTipText("Introducir Contraseña");
        txtPass.setPreferredSize(new java.awt.Dimension(150, 20));
        CustomTextFieldPass customTextFieldPass = new CustomTextFieldPass(100);
        txtPass = customTextFieldPass;
        customTextFieldPass.setPlaceholder("**********");
        customTextFieldPass.setFont(new java.awt.Font("Tahoma", 0, 14));
        customTextFieldPass.setForeground(Color.BLACK);
        customTextFieldPass.setPlaceholderForeground(Color.LIGHT_GRAY);
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPassKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPassKeyTyped(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Login.png"))); // NOI18N

        ckshow.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckshow.setForeground(new java.awt.Color(255, 255, 255));
        ckshow.setText("Mostrar Contraseña");
        ckshow.setToolTipText("Mostrar Contraseña");
        ckshow.setContentAreaFilled(false);
        ckshow.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckshowStateChanged(evt);
            }
        });

        txtVerPass.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtVerPass.setPreferredSize(new java.awt.Dimension(150, 20));
        CustomTextField customTextFieldPassClear = new CustomTextField(100);
        txtVerPass = customTextFieldPassClear;
        customTextFieldPassClear.setPlaceholder("**********");
        customTextFieldPassClear.setFont(new java.awt.Font("Tahoma", 0, 14));
        customTextFieldPassClear.setForeground(Color.BLACK);
        customTextFieldPassClear.setPlaceholderForeground(Color.LIGHT_GRAY);
        txtVerPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVerPassActionPerformed(evt);
            }
        });
        txtVerPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtVerPassKeyReleased(evt);
            }
        });

        CustomTextField customTextField = new CustomTextField(100);
        txtUser = customTextField;
        customTextField.setPlaceholder("Ingrese Su Nombre de Usuario");
        customTextField.setFont(new java.awt.Font("Tahoma", 0, 16));
        customTextField.setForeground(Color.BLACK);
        customTextField.setPlaceholderForeground(Color.LIGHT_GRAY);
        txtUser.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtUser.setPreferredSize(new java.awt.Dimension(150, 20));
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVerPass, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckshow, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtVerPass, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(ckshow, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        txtVerPass.setVisible(false);

        Panel.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(235, 235, 150));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));
        jPanel3.add(jProgressBar1);

        Panel.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(Panel, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(590, 254));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
int Conex = 0;

    int Contador = 0;

    URLabel LabelForget = new URLabel();

    public void ErrorConexion() throws IOException, MessagingException {

        String User = txtUser.getText().trim();
        String Pass = txtPass.getText().trim();

        Timestamp Fecha = new java.sql.Timestamp(currentTimeMillis());

        Alert.SetUsuario(User, Contador);
        Alert.SetContrasena(Pass, Contador);
        Alert.SetFecha(Fecha, Contador);

        this.Conex = 1;
        JOptionPane.showMessageDialog(this, "Usuario y/o Contraseña Incorrecta", "Error", JOptionPane.ERROR_MESSAGE);

        txtPass.requestFocus();
        txtVerPass.requestFocus();
        txtUser.setText("");
        txtPass.setText("");
        btnconnect.setEnabled(true);
        btncancel.setEnabled(true);
        txtUser.requestFocus();
        this.txtUser.setCaretPosition(0);

        Contador++;

        if (Contador >= 3) {
            txtVerPass.setEnabled(false);
            txtUser.setEnabled(false);
            txtPass.setEnabled(false);
            btnconnect.setEnabled(false);
            btncancel.setEnabled(false);
//            Panel.setEnabled(false);
//            jPanel1.setEnabled(false);
//            jPanel2.setEnabled(false);        
            jPanel1.setBackground(new Color(153, 0, 0));
            jPanel2.setBackground(new Color(204, 0, 0));
            ckshow.setEnabled(false);
            txtVerPass.requestFocus();
            Alert.Empezar(new ProcesandoInfo());
        }
    }

    public void Conectar() throws IOException, MessagingException {

        String user, passwd;

        user = txtUser.getText().trim();
        passwd = new String(txtPass.getPassword());

        txtUser.requestFocus();
        btnconnect.setEnabled(false);
        btncancel.setEnabled(false);

        this.Conex = 0;

        if ("".equals(user) || "Ingrese Su Nombre de Usuario".equals(user)) {
            JOptionPane.showMessageDialog(this, "Escriba Su Nombre de Usuario", "Escriba Nombre Usuario", JOptionPane.ERROR_MESSAGE);

            if (Contador == 3) {
                jPanel1.setBackground(new Color(153, 0, 0));
                jPanel2.setBackground(new Color(204, 0, 0));
            }
            ErrorConexion();
            return;
        }

        if ("".equals(passwd) || "**********".equals(passwd)) {
            JOptionPane.showMessageDialog(this, "Escriba Su Contraseña de Usuario", "Escriba Contraseña Usuario", JOptionPane.ERROR_MESSAGE);
            ErrorConexion();
            if (Contador == 3) {
                jPanel1.setBackground(new Color(153, 0, 0));
                jPanel2.setBackground(new Color(204, 0, 0));
            }
            return;
        }

        try {

            String URl = "jdbc:odbc:SistemaFarmacia";
            Conexion C = new Conexion();

            if (!"sa".equalsIgnoreCase(user) && !"administrador".equalsIgnoreCase(user)) {
                //  passwd =  StringMD.getStringMessageDigest(passwd, StringMD.MD5);
            }

            C.setIni(this);
            C.Conectar(URl, user, passwd);

        } catch (SQLException | ClassNotFoundException ex) {

            JOptionPane.showMessageDialog(this, "Usuario y/o Contraseña Incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
// this.txtPass.setText("");
// this.txtUser.setText("Ingrese Nombre Usuario");
// this.txtUser.setForeground(Color.LIGHT_GRAY);
// this.txtUser.setCaretPosition(0);
            ErrorConexion();
            return;
        }

        if (Conex == 0) {

            btnconnect.setEnabled(false);
            btncancel.setEnabled(false);

            JOptionPane.showMessageDialog(this, "Bienvenido "
                    + user, "Information Message",
                    JOptionPane.INFORMATION_MESSAGE);

            this.jProgressBar1.setVisible(true);

            FillProgressBarThread fpt = new FillProgressBarThread();
            fpt.setFlag(true);
            Thread t = new Thread(fpt);
            t.start();
            conected = true;
        }

    }


    private void btnconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconnectActionPerformed

        try {
            Conectar();
        } catch (IOException | MessagingException ex) {

        }

    }//GEN-LAST:event_btnconnectActionPerformed

    public void Cerrar() {

        try {
            JavaSplash.Main.serverSocket.close();
        } catch (IOException | NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error al Cerrar Servidor", "Error", JOptionPane.ERROR_MESSAGE);
        }

        JOptionPane.showMessageDialog(this, "Inicio de Sesión Fallido, Inténtelo Más Tarde", "Inicio Sesión", JOptionPane.ERROR_MESSAGE);

//          String Comando = "shutdown -p"; //"cmd /C dir"
        String Comando = "logoff"; //"cmd /C dir"
        try {
            Process p = Runtime.getRuntime().exec(Comando);
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(p.getInputStream()));
            String line = "";
            while ((line = in.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
        }
        System.exit(0);
    }

    public void Salir() {

        int f = JOptionPane.showConfirmDialog(this, "Está Seguro Que Desea Salir?", "Salir", JOptionPane.YES_NO_OPTION);

        if (f == JOptionPane.YES_OPTION) {

            try {
                JavaSplash.Main.serverSocket.close();
            } catch (IOException | NullPointerException ex) {
                JOptionPane.showMessageDialog(this, "Error al Cerrar Servidor", "Error", JOptionPane.ERROR_MESSAGE);
            }

            System.exit(0);
        }
    }

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed

        Salir();
        // TODO add your handling code here:
    }//GEN-LAST:event_btncancelActionPerformed

    private void txtPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyTyped
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtUser.requestFocus();
            try {
                Conectar();
            } catch (IOException | MessagingException ex) {

            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_txtPassKeyTyped

    KEffectPanel PanelEffect = new KEffectPanel();


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

//         MultipleEffect effects = new MultipleEffect();
////				effects.addEffect(new ShadowFrame(20));
//				effects.addEffect(new Shadow(1000));
//				effects.addEffect(new SplitHorizontalFade(1000));
//				effects.addEffect(new SplitVerticalFade(2000));
//				effects.addEffect(new DarkenReverse(6000,50));
//                                
//         PanelEffect.setEffect(effects);           
        PanelEffect.setEffect(new ZoomIn(1000));
        PanelEffect.startEffect();

//         
        txtPass.requestFocus();
        txtVerPass.requestFocus();
        txtUser.requestFocus();

//setProcess();
//  btnconnect.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    public static ResultSet resultado;


    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        Salir();

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void ckshowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckshowStateChanged
        // TODO add your handling code here:
        if (txtPass.isEnabled()) {

            if (ckshow.isSelected()) {
                txtVerPass.setVisible(true);
                txtPass.setVisible(false);
                validate();
            } else {
                txtVerPass.setVisible(false);
                txtPass.setVisible(true);
                validate();
            }
        }
    }//GEN-LAST:event_ckshowStateChanged

    private void txtVerPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVerPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVerPassActionPerformed

    private void txtPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyReleased
        txtVerPass.setText(txtPass.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassKeyReleased

    private void txtVerPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVerPassKeyReleased
        txtPass.setText(txtVerPass.getText());             // TODO add your handling code here:
    }//GEN-LAST:event_txtVerPassKeyReleased

    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {

            txtPass.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_txtUserKeyTyped

    private class FillProgressBarThread implements Runnable {

        private int i;
        private boolean flag;

        public void setFlag(boolean flag) {
            this.flag = flag;
        }

        public void setI(int i) {
            this.i = i;
        }

        @Override
        public void run() {

            btnconnect.setEnabled(false);

            MenuPrincipal MP = new MenuPrincipal();

            String NombreLogin = txtUser.getText().trim();

            if ("Administrador".equalsIgnoreCase(NombreLogin) || "sa".equalsIgnoreCase(NombreLogin)) {

                MP.setID_Usuario(1);
                MP.setUsuarioBD(NombreLogin);

            }

            if (!"Administrador".equalsIgnoreCase(NombreLogin) && !"sa".equalsIgnoreCase(NombreLogin)) {

                String NombreUsuario = null;
                String ApellidoUsuario = null;
                int ID_Usuario = 0;

                try {
                    resultado = Conexion.consulta("Select [ID_Empleado] from [dbo].[Usuario] where [Nombre_Usuario] = '"
                            + NombreLogin + "'");

                    while (resultado.next()) {
                        ID_Usuario = resultado.getInt(1);
                    }

                    resultado = Conexion.consulta("Select [Nombres_Empleado], [Apellidos_Empleado] from [dbo].[Empleado] where"
                            + "[ID_Empleado] =" + ID_Usuario);

                    while (resultado.next()) {
                        NombreUsuario = resultado.getString(1);
                        ApellidoUsuario = resultado.getString(2);
                    }

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }

                MP.setID_Usuario(ID_Usuario);
                MP.setUsuarioBD(NombreUsuario.trim() + " " + ApellidoUsuario.trim());

            }

            if (i > 100) {
                i = 1;
            }
            while (flag) {

                jProgressBar1.setValue(i++);

                try {
                    Thread.sleep(5);
                } catch (InterruptedException ex) {
                }
                if (i > 100) {
                    flag = false;

                    MP.Iniciar();
                    MP.setVisible(true);

                    IniciarSesion.this.dispose();

                }
            }

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        try {

            UIManager.setLookAndFeel(new com.nilo.plaf.nimrod.NimRODLookAndFeel());

        } catch (UnsupportedLookAndFeelException e) {
            //System.out.println("NO SE PUEDE CARGAR");

        }
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new IniciarSesion().setVisible(true);
            } catch (IOException ex) {

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btnconnect;
    private javax.swing.JCheckBox ckshow;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUser;
    private javax.swing.JTextField txtVerPass;
    // End of variables declaration//GEN-END:variables
}
